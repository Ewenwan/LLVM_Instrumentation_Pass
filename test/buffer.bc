; ModuleID = 'buffer.c'
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.11.0"

%struct.zlog_category_s = type opaque
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i32 (i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i32 (i8*, i8*, i32)*, %struct.__sbuf, %struct.__sFILEX*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64 }
%struct.__sFILEX = type opaque
%struct.__sbuf = type { i8*, i32 }
%struct.timespec = type { i64, i64 }
%struct._opaque_pthread_t = type { i64, %struct.__darwin_pthread_handler_rec*, [8176 x i8] }
%struct.__darwin_pthread_handler_rec = type { void (i8*)*, i8*, %struct.__darwin_pthread_handler_rec* }
%struct._opaque_pthread_attr_t = type { i64, [56 x i8] }

@BUF_SIZE = global i32 5, align 4
@variable_values_cat = common global %struct.zlog_category_s* null, align 8
@.str = private unnamed_addr constant [9 x i8] c"buffer.c\00", align 1
@__func__.log_variable_change = private unnamed_addr constant [20 x i8] c"log_variable_change\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%s %d\00", align 1
@ring_buffer = common global i8* null, align 8
@read_ptr = common global i8* null, align 8
@write_ptr = common global i8* null, align 8
@function_calls_cat = common global %struct.zlog_category_s* null, align 8
@__func__.process = private unnamed_addr constant [8 x i8] c"process\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__stdinp = external global %struct.__sFILE*, align 8
@.str.3 = private unnamed_addr constant [10 x i8] c"write_ptr\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"zlog.conf\00", align 1
@rc = common global i32 0, align 4
@.str.5 = private unnamed_addr constant [13 x i8] c"init failed\0A\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"variable_values_cat\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"get cat fail\0A\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"function_calls_cat\00", align 1

; Function Attrs: nounwind ssp uwtable
define void @log_variable_change(i8* %variable, i32 %value) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  store i8* %variable, i8** %1, align 8
  store i32 %value, i32* %2, align 4
  %3 = load %struct.zlog_category_s*, %struct.zlog_category_s** @variable_values_cat, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load i32, i32* %2, align 4
  call void (%struct.zlog_category_s*, i8*, i64, i8*, i64, i64, i32, i8*, ...) @zlog(%struct.zlog_category_s* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.log_variable_change, i32 0, i32 0), i64 19, i64 22, i32 40, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), i8* %4, i32 %5)
  ret void
}

declare void @zlog(%struct.zlog_category_s*, i8*, i64, i8*, i64, i64, i32, i8*, ...) #1

; Function Attrs: nounwind ssp uwtable
define void @init_ring_buffer() #0 {
  %1 = load i32, i32* @BUF_SIZE, align 4
  %2 = sext i32 %1 to i64
  %3 = call i8* @malloc(i64 %2)
  store i8* %3, i8** @ring_buffer, align 8
  %4 = load i8*, i8** @ring_buffer, align 8
  %5 = ptrtoint i8* %4 to i64
  store atomic i64 %5, i64* bitcast (i8** @read_ptr to i64*) seq_cst, align 8
  %6 = load i8*, i8** @ring_buffer, align 8
  store i8* %6, i8** @write_ptr, align 8
  ret void
}

declare i8* @malloc(i64) #1

; Function Attrs: nounwind ssp uwtable
define i8* @buffer_next(i8* %ptr) #0 {
  %1 = alloca i8*, align 8
  store i8* %ptr, i8** %1, align 8
  %2 = load i8*, i8** @ring_buffer, align 8
  %3 = load i8*, i8** %1, align 8
  %4 = load i8*, i8** @ring_buffer, align 8
  %5 = ptrtoint i8* %3 to i64
  %6 = ptrtoint i8* %4 to i64
  %7 = sub i64 %5, %6
  %8 = add nsw i64 %7, 1
  %9 = load i32, i32* @BUF_SIZE, align 4
  %10 = sext i32 %9 to i64
  %11 = srem i64 %8, %10
  %12 = getelementptr inbounds i8, i8* %2, i64 %11
  ret i8* %12
}

; Function Attrs: nounwind ssp uwtable
define void @process(i8* %data) #0 {
  %1 = alloca i8*, align 8
  %ts = alloca %struct.timespec, align 8
  store i8* %data, i8** %1, align 8
  %2 = load %struct.zlog_category_s*, %struct.zlog_category_s** @function_calls_cat, align 8
  call void (%struct.zlog_category_s*, i8*, i64, i8*, i64, i64, i32, i8*, ...) @zlog(%struct.zlog_category_s* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__func__.process, i32 0, i32 0), i64 7, i64 41, i32 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0))
  %3 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 1
  store i64 1000000, i64* %4, align 8
  %5 = call i32 @"\01_nanosleep"(%struct.timespec* %ts, %struct.timespec* null)
  ret void
}

declare i32 @"\01_nanosleep"(%struct.timespec*, %struct.timespec*) #1

; Function Attrs: nounwind ssp uwtable
define void @producer_main() #0 {
  %next_write_ptr = alloca i8*, align 8
  %ts = alloca %struct.timespec, align 8
  br label %1

; <label>:1                                       ; preds = %28, %0
  %2 = load %struct.__sFILE*, %struct.__sFILE** @__stdinp, align 8
  %3 = call i32 @feof(%struct.__sFILE* %2)
  %4 = icmp ne i32 %3, 0
  %5 = xor i1 %4, true
  br i1 %5, label %6, label %29

; <label>:6                                       ; preds = %1
  %7 = load i8*, i8** @write_ptr, align 8
  %8 = call i8* @buffer_next(i8* %7)
  store i8* %8, i8** %next_write_ptr, align 8
  %9 = load i8*, i8** %next_write_ptr, align 8
  %10 = load atomic i64, i64* bitcast (i8** @read_ptr to i64*) seq_cst, align 8
  %11 = inttoptr i64 %10 to i8*
  %12 = icmp ne i8* %9, %11
  br i1 %12, label %13, label %28

; <label>:13                                      ; preds = %6
  %14 = load %struct.__sFILE*, %struct.__sFILE** @__stdinp, align 8
  %15 = call i32 @getc(%struct.__sFILE* %14)
  %16 = trunc i32 %15 to i8
  %17 = load i8*, i8** @write_ptr, align 8
  store i8 %16, i8* %17, align 1
  %18 = load i8*, i8** %next_write_ptr, align 8
  %19 = ptrtoint i8* %18 to i32
  call void @log_variable_change(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0), i32 %19)
  %20 = load i8*, i8** %next_write_ptr, align 8
  store i8* %20, i8** @write_ptr, align 8
  %21 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 0
  store i64 0, i64* %21, align 8
  %22 = call i32 @rand()
  %23 = sext i32 %22 to i64
  %24 = mul i64 100000000, %23
  %25 = udiv i64 %24, 2147483647
  %26 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 1
  store i64 %25, i64* %26, align 8
  %27 = call i32 @"\01_nanosleep"(%struct.timespec* %ts, %struct.timespec* null)
  br label %28

; <label>:28                                      ; preds = %13, %6
  br label %1

; <label>:29                                      ; preds = %1
  ret void
}

declare i32 @feof(%struct.__sFILE*) #1

declare i32 @getc(%struct.__sFILE*) #1

declare i32 @rand() #1

; Function Attrs: nounwind ssp uwtable
define i8* @consumer_main(i8* %thread_id) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %tid = alloca i32, align 4
  %current_rptr = alloca i8*, align 8
  %current_wptr = alloca i8*, align 8
  %data = alloca i8, align 1
  %next_read_ptr = alloca i8*, align 8
  %local_read_ptr = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  %ts = alloca %struct.timespec, align 8
  store i8* %thread_id, i8** %2, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = ptrtoint i8* %5 to i32
  store i32 %6, i32* %tid, align 4
  store i8 0, i8* %data, align 1
  br label %7

; <label>:7                                       ; preds = %0, %40
  %8 = load atomic i64, i64* bitcast (i8** @read_ptr to i64*) seq_cst, align 8
  %9 = inttoptr i64 %8 to i8*
  store i8* %9, i8** %local_read_ptr, align 8
  %10 = load i8*, i8** %local_read_ptr, align 8
  %11 = load i8*, i8** @write_ptr, align 8
  %12 = icmp ne i8* %10, %11
  br i1 %12, label %13, label %40

; <label>:13                                      ; preds = %7
  %14 = load i8*, i8** %local_read_ptr, align 8
  %15 = load i8, i8* %14, align 1
  store i8 %15, i8* %data, align 1
  %16 = load i8*, i8** %local_read_ptr, align 8
  %17 = call i8* @buffer_next(i8* %16)
  store i8* %17, i8** %next_read_ptr, align 8
  %18 = load i8*, i8** %next_read_ptr, align 8
  store i8* %18, i8** %3, align 8
  %19 = bitcast i8** %local_read_ptr to i64*
  %20 = bitcast i8** %3 to i64*
  %21 = load i64, i64* %19, align 8
  %22 = load i64, i64* %20, align 8
  %23 = cmpxchg weak i64* bitcast (i8** @read_ptr to i64*), i64 %21, i64 %22 seq_cst seq_cst
  %24 = extractvalue { i64, i1 } %23, 0
  %25 = extractvalue { i64, i1 } %23, 1
  br i1 %25, label %27, label %26

; <label>:26                                      ; preds = %13
  store i64 %24, i64* %19, align 8
  br label %27

; <label>:27                                      ; preds = %26, %13
  %28 = zext i1 %25 to i8
  store i8 %28, i8* %4, align 1
  %29 = load i8, i8* %4, align 1
  %30 = trunc i8 %29 to i1
  br i1 %30, label %31, label %32

; <label>:31                                      ; preds = %27
  call void @process(i8* %data)
  br label %32

; <label>:32                                      ; preds = %31, %27
  %33 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 0
  store i64 0, i64* %33, align 8
  %34 = call i32 @rand()
  %35 = sext i32 %34 to i64
  %36 = mul i64 100000000, %35
  %37 = udiv i64 %36, 2147483647
  %38 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 1
  store i64 %37, i64* %38, align 8
  %39 = call i32 @"\01_nanosleep"(%struct.timespec* %ts, %struct.timespec* null)
  br label %40

; <label>:40                                      ; preds = %32, %7
  br label %7
                                                  ; No predecessors!
  %42 = load i8*, i8** %1, align 8
  ret i8* %42
}

; Function Attrs: nounwind ssp uwtable
define void @create_consumers(i32 %num_consumers) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %rc = alloca i32, align 4
  %t = alloca i32, align 4
  store i32 %num_consumers, i32* %1, align 4
  %3 = load i32, i32* %1, align 4
  %4 = zext i32 %3 to i64
  %5 = call i8* @llvm.stacksave()
  store i8* %5, i8** %2, align 8
  %6 = alloca %struct._opaque_pthread_t*, i64 %4, align 16
  %7 = load i32, i32* %1, align 4
  %8 = zext i32 %7 to i64
  %9 = alloca i32, i64 %8, align 16
  store i32 0, i32* %t, align 4
  br label %10

; <label>:10                                      ; preds = %30, %0
  %11 = load i32, i32* %t, align 4
  %12 = load i32, i32* %1, align 4
  %13 = icmp slt i32 %11, %12
  br i1 %13, label %14, label %33

; <label>:14                                      ; preds = %10
  %15 = load i32, i32* %t, align 4
  %16 = load i32, i32* %t, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i32, i32* %9, i64 %17
  store i32 %15, i32* %18, align 4
  %19 = load i32, i32* %t, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %struct._opaque_pthread_t*, %struct._opaque_pthread_t** %6, i64 %20
  %22 = load i32, i32* %t, align 4
  %23 = sext i32 %22 to i64
  %24 = inttoptr i64 %23 to i8*
  %25 = call i32 @pthread_create(%struct._opaque_pthread_t** %21, %struct._opaque_pthread_attr_t* null, i8* (i8*)* @consumer_main, i8* %24)
  store i32 %25, i32* %rc, align 4
  %26 = load i32, i32* %rc, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %29

; <label>:28                                      ; preds = %14
  call void @pthread_exit(i8* null) #4
  unreachable

; <label>:29                                      ; preds = %14
  br label %30

; <label>:30                                      ; preds = %29
  %31 = load i32, i32* %t, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %t, align 4
  br label %10

; <label>:33                                      ; preds = %10
  %34 = load i8*, i8** %2, align 8
  call void @llvm.stackrestore(i8* %34)
  ret void
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #2

declare i32 @pthread_create(%struct._opaque_pthread_t**, %struct._opaque_pthread_attr_t*, i8* (i8*)*, i8*) #1

; Function Attrs: noreturn
declare void @pthread_exit(i8*) #3

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #2

; Function Attrs: nounwind ssp uwtable
define i32 @main() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %2 = call i32 @zlog_init(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0))
  store i32 %2, i32* @rc, align 4
  %3 = load i32, i32* @rc, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %7

; <label>:5                                       ; preds = %0
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0))
  store i32 -1, i32* %1, align 4
  br label %20

; <label>:7                                       ; preds = %0
  %8 = call %struct.zlog_category_s* @zlog_get_category(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i32 0, i32 0))
  store %struct.zlog_category_s* %8, %struct.zlog_category_s** @variable_values_cat, align 8
  %9 = load %struct.zlog_category_s*, %struct.zlog_category_s** @variable_values_cat, align 8
  %10 = icmp ne %struct.zlog_category_s* %9, null
  br i1 %10, label %13, label %11

; <label>:11                                      ; preds = %7
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0))
  call void @zlog_fini()
  store i32 -2, i32* %1, align 4
  br label %20

; <label>:13                                      ; preds = %7
  %14 = call %struct.zlog_category_s* @zlog_get_category(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i32 0, i32 0))
  store %struct.zlog_category_s* %14, %struct.zlog_category_s** @function_calls_cat, align 8
  %15 = load %struct.zlog_category_s*, %struct.zlog_category_s** @function_calls_cat, align 8
  %16 = icmp ne %struct.zlog_category_s* %15, null
  br i1 %16, label %19, label %17

; <label>:17                                      ; preds = %13
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0))
  call void @zlog_fini()
  store i32 -2, i32* %1, align 4
  br label %20

; <label>:19                                      ; preds = %13
  call void @init_ring_buffer()
  call void @create_consumers(i32 2)
  call void @producer_main()
  store i32 0, i32* %1, align 4
  br label %20

; <label>:20                                      ; preds = %19, %17, %11, %5
  %21 = load i32, i32* %1, align 4
  ret i32 %21
}

declare i32 @zlog_init(i8*) #1

declare i32 @printf(i8*, ...) #1

declare %struct.zlog_category_s* @zlog_get_category(i8*) #1

declare void @zlog_fini() #1

attributes #0 = { nounwind ssp uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+ssse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+ssse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+ssse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"PIC Level", i32 2}
!1 = !{!"clang version 3.8.1 (tags/RELEASE_381/final)"}
